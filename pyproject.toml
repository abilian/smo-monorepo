[project]
name = "smo-monorepo"
version = "0.1.0"
description = "Fork of SMO as a monorepo, containing the core library, CLI, and web interface."
authors = [
    { name = "Stefane Fermigier", email = "sf@abilian.com" },
]
readme = "README.md"
requires-python = ">=3.12"

dependencies = [
    # Workspace
    # "hop3-agent",
    "smo-core",
    "smo-cli",
    "smo-web",
    "smo-sdk",
    "invoke>=2.2.0",
]

# ------------------------------------

[tool.uv]
package = false
dev-dependencies = [
    # Generic tools
    "abilian-devtools >= 0.7",
    "reuse >= 5.0",
    "pydoclint[flake8]>=0.5.9",
    "ty>=0.0.0a7",
    "hatchling>=1.27.0",
    "pytest-mock>=3.14.1",
    "snoop>=0.6.0",
    "devtools>=0.12.2",
    "openapi-python-client>=0.25.2",
]

[tool.uv.workspace]
members = ["smo-*"]

[tool.uv.sources]
smo-core = { workspace = true }
smo-cli = { workspace = true }
smo-web = { workspace = true }
smo-sdk = { workspace = true }

# ------------------------------------

[tool.isort]
profile = "black"
known_first_party = ["smo_core", "smo_cli"]

# ------------------------------------

[tool.pytest.ini_options]
# See: https://docs.pytest.org/en/7.1.x/explanation/pythonpath.html#import-modes
# and: https://docs.pytest.org/en/7.1.x/explanation/goodpractices.html#choosing-an-import-mode
addopts = "-ra --import-mode=importlib"
# testpaths = []

# ------------------------------------

[tool.coverage.report]
exclude_also = [
    "if typing.TYPE_CHECKING:",
    "if TYPE_CHECKING:",
]

# ------------------------------------

[tool.mypy]
ignore_missing_imports = true
strict_optional = true
warn_no_return = true
warn_unused_ignores = true
check_untyped_defs = true

# exclude = []
